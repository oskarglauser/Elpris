{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/lib/electricity-api.ts"],"sourcesContent":["// Type definitions for 15-minute electricity price data\nexport interface PriceInterval {\n  time_start: string; // ISO 8601 DateTime with timezone\n  time_end: string; // ISO 8601 DateTime with timezone\n  SEK_per_kWh: number; // Electricity spot price in SEK per kWh\n}\n\nexport interface ElectricityPriceResponse {\n  data: PriceInterval[];\n}\n\nexport type Region = 'SE1' | 'SE2' | 'SE3' | 'SE4';\n\n/**\n * Fetch electricity prices for a specific date and region\n * @param year - Four-digit year (YYYY)\n * @param month - Two-digit month (MM)\n * @param day - Two-digit day (DD)\n * @param region - Swedish electricity price region (SE1-SE4)\n * @returns Array of 96 price intervals (24 hours × 4 intervals per hour)\n */\nexport async function fetchElectricityPrices(\n  year: string,\n  month: string,\n  day: string,\n  region: Region = 'SE3'\n): Promise<PriceInterval[]> {\n  const url = `https://www.elprisetjustnu.se/api/v1/prices/${year}/${month}-${day}_${region}.json`;\n\n  try {\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        throw new Error(`Data ej tillgänglig för ${year}-${month}-${day}. Morgondagens priser publiceras tidigast kl 13:00.`);\n      }\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    const data: PriceInterval[] = await response.json();\n\n    if (!Array.isArray(data) || data.length === 0) {\n      throw new Error('Tom eller ogiltig data från API');\n    }\n\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      throw error;\n    }\n    throw new Error('Nätverksfel: Kunde inte hämta elpriser');\n  }\n}\n\n/**\n * Get current date formatted for API\n */\nexport function getCurrentDate(): { year: string; month: string; day: string } {\n  const now = new Date();\n  const year = now.getFullYear().toString();\n  const month = (now.getMonth() + 1).toString().padStart(2, '0');\n  const day = now.getDate().toString().padStart(2, '0');\n  \n  return { year, month, day };\n}\n\n/**\n * Fetch today's electricity prices\n */\nexport async function fetchTodaysPrices(region: Region = 'SE3'): Promise<PriceInterval[]> {\n  const { year, month, day } = getCurrentDate();\n  return fetchElectricityPrices(year, month, day, region);\n}\n\n/**\n * Get tomorrow's date formatted for API\n */\nexport function getTomorrowDate(): { year: string; month: string; day: string } {\n  const tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  \n  const year = tomorrow.getFullYear().toString();\n  const month = (tomorrow.getMonth() + 1).toString().padStart(2, '0');\n  const day = tomorrow.getDate().toString().padStart(2, '0');\n  \n  return { year, month, day };\n}\n\n/**\n * Fetch tomorrow's electricity prices\n */\nexport async function fetchTomorrowsPrices(region: Region = 'SE3'): Promise<PriceInterval[]> {\n  const { year, month, day } = getTomorrowDate();\n  return fetchElectricityPrices(year, month, day, region);\n}\n\n/**\n * Fetch both today's and tomorrow's prices\n */\nexport async function fetchTodayAndTomorrowPrices(region: Region = 'SE3'): Promise<{\n  today: PriceInterval[];\n  tomorrow: PriceInterval[];\n}> {\n  try {\n    const [today, tomorrow] = await Promise.all([\n      fetchTodaysPrices(region),\n      fetchTomorrowsPrices(region).catch((err) => {\n        console.info('Morgondagens priser är inte tillgängliga än:', err.message);\n        return [];\n      }),\n    ]);\n\n    if (today.length === 0) {\n      throw new Error('Inga elpriser tillgängliga för idag');\n    }\n\n    return { today, tomorrow };\n  } catch (error) {\n    console.error('Error fetching prices:', error);\n    throw error;\n  }\n}\n\n/**\n * Get the current price interval based on current time\n */\nexport function getCurrentPriceInterval(prices: PriceInterval[]): PriceInterval | null {\n  const now = new Date();\n  \n  for (const interval of prices) {\n    const start = new Date(interval.time_start);\n    const end = new Date(interval.time_end);\n    \n    if (now >= start && now < end) {\n      return interval;\n    }\n  }\n  \n  return null;\n}\n\n/**\n * Calculate price statistics\n */\nexport function calculatePriceStats(prices: PriceInterval[]) {\n  if (prices.length === 0) {\n    return { min: 0, max: 0, average: 0 };\n  }\n  \n  const priceValues = prices.map(p => p.SEK_per_kWh);\n  const min = Math.min(...priceValues);\n  const max = Math.max(...priceValues);\n  const average = priceValues.reduce((sum, price) => sum + price, 0) / priceValues.length;\n  \n  return { min, max, average };\n}\n\n/**\n * Get price level (low, medium, high) based on comparison to average\n */\nexport function getPriceLevel(price: number, average: number): 'low' | 'medium' | 'high' {\n  const threshold = average * 0.2; // 20% threshold\n  \n  if (price < average - threshold) return 'low';\n  if (price > average + threshold) return 'high';\n  return 'medium';\n}\n\n/**\n * Format time for display (e.g., \"Idag, 12:00-13:00\")\n */\nexport function formatTimeRange(start: string, end: string): string {\n  const startTime = new Date(start).toLocaleTimeString('sv-SE', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n  const endTime = new Date(end).toLocaleTimeString('sv-SE', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n  \n  return `Idag, ${startTime}-${endTime}`;\n}\n\n/**\n * Format price for display\n */\nexport function formatPrice(price: number): string {\n  return `${price.toFixed(1)} öre/kWh`;\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/lib/appliance-service.ts"],"sourcesContent":["import { PriceInterval } from './electricity-api';\n\nexport interface Appliance {\n  id: number;\n  name: string;\n  icon: string;\n  kWh: number;\n  hours: number;\n  timeWindow: { start: number; end: number };\n  enabled: boolean;\n}\n\nexport interface PriceSlot {\n  price: number;\n  hour: number;\n  minute: number;\n  time: Date;\n}\n\nexport interface SavingsData {\n  bestSlots: PriceSlot[];\n  bestAvg: number;\n  savingsKr: number;\n  savingsOre: number;\n  savingsDisplay: string;\n}\n\nexport const iconOptions = [\n  'Car', 'WashingMachine', 'Wind', 'Utensils', 'Flame', 'SprayCan',\n  'CookingPot', 'ShowerHead', 'Bath', 'Zap', 'Lightbulb', 'Refrigerator',\n  'Tv', 'Laptop', 'Smartphone', 'Drill', 'Microwave', 'Coffee',\n  'Fan', 'Speaker', 'Heater', 'Snowflake', 'Droplet', 'Waves',\n  'Plug', 'BatteryCharging', 'Power', 'Gauge', 'Archive', 'Thermometer'\n];\n\nexport const presets: Appliance[] = [\n  { id: 1, name: 'Elbil', icon: 'Car', kWh: 40, hours: 4, timeWindow: { start: 0, end: 24 }, enabled: true },\n  { id: 2, name: 'Tvättmaskin', icon: 'WashingMachine', kWh: 1, hours: 1, timeWindow: { start: 6, end: 23 }, enabled: true },\n  { id: 3, name: 'Torktumlare', icon: 'Wind', kWh: 3, hours: 1.5, timeWindow: { start: 6, end: 23 }, enabled: false },\n  { id: 4, name: 'Torkskåp', icon: 'Archive', kWh: 2.5, hours: 3, timeWindow: { start: 6, end: 23 }, enabled: false },\n  { id: 5, name: 'Diskmaskin', icon: 'Utensils', kWh: 1.5, hours: 2, timeWindow: { start: 6, end: 24 }, enabled: false },\n  { id: 6, name: 'Värmepump', icon: 'Thermometer', kWh: 3, hours: 8, timeWindow: { start: 0, end: 24 }, enabled: false },\n  { id: 7, name: 'Luftkonditionering', icon: 'Snowflake', kWh: 2, hours: 6, timeWindow: { start: 0, end: 24 }, enabled: false },\n  { id: 8, name: 'Poolpump', icon: 'Waves', kWh: 1.5, hours: 6, timeWindow: { start: 0, end: 24 }, enabled: false },\n  { id: 9, name: 'Elpatron', icon: 'Heater', kWh: 5, hours: 3, timeWindow: { start: 0, end: 24 }, enabled: false },\n  { id: 10, name: 'Spis och ugn', icon: 'CookingPot', kWh: 3, hours: 1, timeWindow: { start: 6, end: 23 }, enabled: false },\n  { id: 11, name: 'Computer', icon: 'Laptop', kWh: 0.3, hours: 8, timeWindow: { start: 6, end: 23 }, enabled: false },\n  { id: 12, name: 'Eldriven golvvärme badrum', icon: 'Flame', kWh: 2, hours: 4, timeWindow: { start: 5, end: 23 }, enabled: false },\n  { id: 13, name: 'Dammsugare', icon: 'SprayCan', kWh: 1.5, hours: 0.5, timeWindow: { start: 7, end: 22 }, enabled: false },\n  { id: 14, name: 'Bastu', icon: 'Flame', kWh: 8, hours: 2, timeWindow: { start: 15, end: 23 }, enabled: false }\n];\n\nconst STORAGE_KEY = 'greenely_appliances';\n\nexport class ApplianceService {\n  private appliances: Appliance[];\n\n  constructor() {\n    this.appliances = this.loadAppliances();\n  }\n\n  private loadAppliances(): Appliance[] {\n    if (typeof window === 'undefined') return [...presets];\n\n    try {\n      const saved = localStorage.getItem(STORAGE_KEY);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    } catch (error) {\n      console.error('Failed to load appliances:', error);\n    }\n    return [...presets];\n  }\n\n  private saveAppliances(): void {\n    if (typeof window === 'undefined') return;\n\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(this.appliances));\n    } catch (error) {\n      console.error('Failed to save appliances:', error);\n    }\n  }\n\n  getAppliances(): Appliance[] {\n    return this.appliances;\n  }\n\n  getEnabledAppliances(): Appliance[] {\n    return this.appliances.filter(a => a.enabled);\n  }\n\n  toggleAppliance(id: number): void {\n    const app = this.appliances.find(a => a.id === id);\n    if (app) {\n      app.enabled = !app.enabled;\n      this.saveAppliances();\n    }\n  }\n\n  updateApplianceField(id: number, field: keyof Appliance, value: any): void {\n    const app = this.appliances.find(a => a.id === id);\n    if (app && field !== 'id') {\n      (app as any)[field] = value;\n      this.saveAppliances();\n    }\n  }\n\n  updateTimeWindow(id: number, field: 'start' | 'end', value: number): void {\n    const app = this.appliances.find(a => a.id === id);\n    if (app) {\n      app.timeWindow[field] = value;\n      this.saveAppliances();\n    }\n  }\n\n  convertPriceIntervalsToPriceSlots(intervals: PriceInterval[]): PriceSlot[] {\n    return intervals.map(item => {\n      const time = new Date(item.time_start);\n      return {\n        price: Math.round(item.SEK_per_kWh * 100),\n        hour: time.getHours(),\n        minute: time.getMinutes(),\n        time: time\n      };\n    });\n  }\n\n  findBestTimeSlots(\n    durationSlots: number = 1,\n    timeWindow: { start: number; end: number } = { start: 0, end: 24 },\n    priceData: PriceSlot[] = []\n  ): PriceSlot[] {\n    const filteredData = priceData.filter(slot => {\n      const hour = slot.hour;\n      if (timeWindow.start < timeWindow.end) {\n        return hour >= timeWindow.start && hour < timeWindow.end;\n      } else {\n        return hour >= timeWindow.start || hour < timeWindow.end;\n      }\n    });\n\n    if (filteredData.length === 0) return [];\n\n    if (durationSlots === 1) {\n      return [[...filteredData].sort((a, b) => a.price - b.price)[0]];\n    }\n\n    let bestSlots: PriceSlot[] = [];\n    let lowestAvg = Infinity;\n\n    for (let i = 0; i <= filteredData.length - durationSlots; i++) {\n      const slots = filteredData.slice(i, i + durationSlots);\n      const avg = slots.reduce((sum, slot) => sum + slot.price, 0) / durationSlots;\n\n      if (avg < lowestAvg) {\n        lowestAvg = avg;\n        bestSlots = slots;\n      }\n    }\n\n    return bestSlots;\n  }\n\n  calculateSavings(\n    appliance: Appliance,\n    dailyAvgPrice: number,\n    priceData: PriceSlot[]\n  ): SavingsData | null {\n    const slots = Math.ceil((appliance.hours * 60) / 15);\n    const timeWindow = appliance.timeWindow || { start: 0, end: 24 };\n    const bestSlots = this.findBestTimeSlots(slots, timeWindow, priceData);\n\n    if (bestSlots.length === 0) return null;\n\n    const bestAvg = bestSlots.reduce((sum, slot) => sum + slot.price, 0) / bestSlots.length;\n    const savingsKr = ((dailyAvgPrice - bestAvg) * appliance.kWh) / 100;\n    const savingsOre = Math.round(savingsKr * 100);\n\n    let savingsDisplay;\n    if (Math.abs(savingsKr) >= 1) {\n      const sign = savingsKr >= 0 ? '+' : '';\n      savingsDisplay = `${sign}${savingsKr.toFixed(0)} kr`;\n    } else {\n      const sign = savingsOre >= 0 ? '+' : '';\n      savingsDisplay = `${sign}${savingsOre} öre`;\n    }\n\n    return {\n      bestSlots,\n      bestAvg,\n      savingsKr,\n      savingsOre,\n      savingsDisplay\n    };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 510, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/prototypes/prototype-a/PriceChartGraph.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef } from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  LineController,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ChartOptions\n} from 'chart.js';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport { PriceInterval } from '@/lib/electricity-api';\nimport { PriceSlot } from '@/lib/appliance-service';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  LineController,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  annotationPlugin\n);\n\ninterface PriceChartGraphProps {\n  priceData: PriceInterval[];\n  selectedDay: 'today' | 'tomorrow';\n}\n\nexport function PriceChartGraph({ priceData, selectedDay }: PriceChartGraphProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current || priceData.length === 0) return;\n\n    const prices = priceData.map(item => Math.round(item.SEK_per_kWh * 100));\n    const labels = priceData.map(item => {\n      const time = new Date(item.time_start);\n      const h = String(time.getHours()).padStart(2, '0');\n      const m = String(time.getMinutes()).padStart(2, '0');\n      return `${h}:${m}`;\n    });\n\n    const avgPrice = prices.reduce((a, b) => a + b, 0) / prices.length;\n\n    const now = new Date();\n    const currentIndex = selectedDay === 'today'\n      ? priceData.findIndex(item => {\n          const start = new Date(item.time_start);\n          const end = new Date(item.time_end);\n          return now >= start && now < end;\n        })\n      : -1;\n\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n    const minIndex = prices.indexOf(minPrice);\n    const maxIndex = prices.indexOf(maxPrice);\n\n    const transitions: Array<{ index: number; type: 'expensive' | 'cheap'; time: string }> = [];\n    for (let i = 1; i < prices.length; i++) {\n      const prevPrice = prices[i - 1];\n      const currPrice = prices[i];\n      const prevCategory = prevPrice < avgPrice * 0.85 ? 'green' : prevPrice >= avgPrice * 1.15 ? 'red' : 'yellow';\n      const currCategory = currPrice < avgPrice * 0.85 ? 'green' : currPrice >= avgPrice * 1.15 ? 'red' : 'yellow';\n\n      if ((prevCategory === 'green' || prevCategory === 'yellow') && currCategory === 'red') {\n        transitions.push({ index: i, type: 'expensive', time: labels[i] });\n      }\n      if ((prevCategory === 'red' || prevCategory === 'yellow') && currCategory === 'green') {\n        transitions.push({ index: i, type: 'cheap', time: labels[i] });\n      }\n    }\n\n    const minSpacing = 8;\n    const filteredTransitions: typeof transitions = [];\n    let lastIndex = -minSpacing;\n\n    for (const transition of transitions) {\n      if (transition.index - lastIndex >= minSpacing) {\n        filteredTransitions.push(transition);\n        lastIndex = transition.index;\n      }\n    }\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n    }\n\n    const ctx = canvasRef.current.getContext('2d');\n    if (!ctx) return;\n\n    const gradient = ctx.createLinearGradient(0, 0, 0, 250);\n    gradient.addColorStop(0, 'rgba(215, 51, 51, 0.1)');\n    gradient.addColorStop(0.45, 'rgba(255, 193, 7, 0.1)');\n    gradient.addColorStop(0.8, 'rgba(0, 154, 51, 0.1)');\n    gradient.addColorStop(1, 'rgba(0, 154, 51, 0.05)');\n\n    const annotations: any = {\n      minPrice: {\n        type: 'point',\n        xValue: minIndex,\n        yValue: minPrice,\n        backgroundColor: '#009A33',\n        radius: 6,\n        borderWidth: 0\n      },\n      maxPrice: {\n        type: 'point',\n        xValue: maxIndex,\n        yValue: maxPrice,\n        backgroundColor: '#D73333',\n        radius: 6,\n        borderWidth: 0\n      }\n    };\n\n    if (currentIndex >= 0) {\n      annotations.currentTime = {\n        type: 'line',\n        xMin: currentIndex,\n        xMax: currentIndex,\n        borderColor: '#000000',\n        borderWidth: 2,\n        borderDash: [5, 5],\n        label: {\n          display: true,\n          content: 'Nu',\n          position: 'start',\n          backgroundColor: '#000000',\n          color: '#FFFFFF',\n          font: { size: 11 },\n          padding: 4\n        }\n      };\n    }\n\n    filteredTransitions.forEach((transition, idx) => {\n      annotations[`transition_${idx}`] = {\n        type: 'label',\n        xValue: transition.index,\n        yValue: prices[transition.index],\n        backgroundColor: transition.type === 'expensive' ? '#D73333' : '#009A33',\n        color: '#FFFFFF',\n        content: transition.time,\n        font: { size: 10 },\n        padding: { top: 2, bottom: 2, left: 4, right: 4 },\n        borderRadius: 4,\n        position: 'start'\n      };\n    });\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Pris (öre/kWh)',\n          data: prices,\n          borderColor: '#191919',\n          backgroundColor: gradient,\n          borderWidth: 1.5,\n          fill: 'origin',\n          stepped: true,\n          pointRadius: 0,\n          pointHoverRadius: 8,\n          pointHoverBackgroundColor: '#000000',\n          pointHoverBorderColor: '#FFFFFF',\n          pointHoverBorderWidth: 3,\n          segment: {\n            borderColor: (ctx) => {\n              const price = ctx.p1.parsed.y;\n              if (price == null) return '#FFC107';\n              if (price < avgPrice * 0.85) return '#009A33';\n              if (price >= avgPrice * 1.15) return '#D73333';\n              return '#FFC107';\n            }\n          }\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        interaction: {\n          mode: 'nearest',\n          intersect: false,\n          axis: 'x'\n        },\n        plugins: {\n          legend: { display: false },\n          tooltip: {\n            enabled: true,\n            backgroundColor: 'rgba(0, 0, 0, 0.95)',\n            padding: 16,\n            titleFont: { size: 16 },\n            bodyFont: { size: 18 },\n            cornerRadius: 8,\n            displayColors: false,\n            callbacks: {\n              title: (context) => {\n                const startTime = context[0].label;\n                const [h, m] = startTime.split(':');\n                const endMinute = (parseInt(m) + 15) % 60;\n                const endHour = endMinute === 0 ? (parseInt(h) + 1) % 24 : parseInt(h);\n                const endTime = `${String(endHour).padStart(2, '0')}:${String(endMinute).padStart(2, '0')}`;\n                return `${startTime} - ${endTime}`;\n              },\n              label: (context) => `${context.parsed.y} öre/kWh`\n            }\n          },\n          annotation: {\n            annotations\n          }\n        },\n        scales: {\n          y: {\n            display: true,\n            beginAtZero: false,\n            min: Math.floor(minPrice * 0.95),\n            max: Math.ceil(maxPrice * 1.05),\n            ticks: {\n              font: { size: 11 },\n              color: '#000000',\n              padding: 0,\n              maxTicksLimit: 7\n            },\n            grid: {\n              display: false\n            },\n            border: {\n              display: false\n            }\n          },\n          x: {\n            ticks: {\n              font: { size: 11 },\n              color: '#000000',\n              maxRotation: 0,\n              minRotation: 0,\n              autoSkip: true,\n              maxTicksLimit: typeof window !== 'undefined' && window.innerWidth < 640 ? 6 : 12,\n              padding: 0,\n              callback: function(value, index) {\n                const label = this.getLabelForValue(value as number);\n                return label.split(':')[0];\n              }\n            },\n            grid: {\n              display: false\n            }\n          }\n        }\n      }\n    });\n\n    return () => {\n      if (chartRef.current) {\n        chartRef.current.destroy();\n      }\n    };\n  }, [priceData, selectedDay]);\n\n  if (priceData.length === 0) {\n    return (\n      <div className=\"px-4 py-4 bg-white\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"p-8 text-center\">\n            <p className=\"text-muted-foreground\">Priser för imorgon är inte tillgängliga än</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"px-4 pt-4 pb-2 bg-white\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"relative h-[250px] sm:h-[240px] md:h-[280px]\">\n          <canvas ref={canvasRef} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/prototypes/prototype-a/DayToggle.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\nexport type DaySelection = 'today' | 'tomorrow';\n\ninterface DayToggleProps {\n  selectedDay: DaySelection;\n  onDayChange: (day: DaySelection) => void;\n}\n\nexport function DayToggle({ selectedDay, onDayChange }: DayToggleProps) {\n  return (\n    <div className=\"px-4 pb-4\">\n      <div className=\"max-w-4xl mx-auto flex justify-center\">\n        <div className=\"inline-flex rounded bg-[#F2EFEC] p-1\">\n          <button\n            onClick={() => onDayChange('today')}\n            className={`px-4 py-1.5 text-sm rounded transition-colors ${\n              selectedDay === 'today'\n                ? 'bg-white text-[#000000] shadow-sm'\n                : 'bg-[#CDC8C2] hover:bg-white/50 text-[#000000]'\n            }`}\n          >\n            Idag\n          </button>\n          <button\n            onClick={() => onDayChange('tomorrow')}\n            className={`px-4 py-1.5 text-sm rounded transition-colors ${\n              selectedDay === 'tomorrow'\n                ? 'bg-white text-[#000000] shadow-sm'\n                : 'bg-[#CDC8C2] hover:bg-white/50 text-[#000000]'\n            }`}\n          >\n            Imorgon\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAWO,SAAS,UAAU,EAAE,WAAW,EAAE,WAAW,EAAkB;IACpE,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,SAAS,IAAM,YAAY;wBAC3B,WAAW,CAAC,8CAA8C,EACxD,gBAAgB,UACZ,sCACA,iDACJ;kCACH;;;;;;kCAGD,8OAAC;wBACC,SAAS,IAAM,YAAY;wBAC3B,WAAW,CAAC,8CAA8C,EACxD,gBAAgB,aACZ,sCACA,iDACJ;kCACH;;;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 891, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/prototypes/prototype-a/DeviceList.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Settings, ChevronDown } from 'lucide-react';\nimport { ApplianceService, Appliance, PriceSlot, SavingsData } from '@/lib/appliance-service';\nimport * as LucideIcons from 'lucide-react';\n\ninterface DeviceListProps {\n  applianceService: ApplianceService;\n  priceData: PriceSlot[];\n  onSettingsClick: () => void;\n  onUpdate: () => void;\n}\n\nexport function DeviceList({ applianceService, priceData, onSettingsClick, onUpdate }: DeviceListProps) {\n  const [expandedDevices, setExpandedDevices] = useState<Set<number>>(new Set());\n  const [expandedSavings, setExpandedSavings] = useState(false);\n\n  const enabledAppliances = applianceService.getEnabledAppliances();\n\n  if (enabledAppliances.length === 0) {\n    return (\n      <div className=\"px-4 py-2 pb-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h2 className=\"text-lg font-normal\">Dina enheter</h2>\n            <button\n              onClick={onSettingsClick}\n              className=\"p-2 hover:bg-[#F2EFEC] rounded transition-colors\"\n            >\n              <Settings className=\"w-6 h-6 text-[#000000]\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"p-8 text-center bg-white rounded\">\n          <p className=\"text-muted-foreground\">Lägg till apparater för att se bästa tiderna</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (priceData.length === 0) {\n    return (\n      <div className=\"px-4 py-2 pb-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          <div className=\"flex items-center justify-between mb-3\">\n            <h2 className=\"text-lg font-normal\">Dina enheter</h2>\n            <button\n              onClick={onSettingsClick}\n              className=\"p-2 hover:bg-[#F2EFEC] rounded transition-colors\"\n            >\n              <Settings className=\"w-6 h-6 text-[#000000]\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"bg-white rounded\">\n          <div className=\"px-4 py-3 grid grid-cols-3 gap-3 items-center border-b border-[#E5E5E5]\">\n            <div className=\"text-xs text-[#000000] opacity-60\">Enhet</div>\n            <div className=\"text-xs text-[#000000] opacity-60 text-center\">Billigast tid</div>\n            <div className=\"text-xs text-[#000000] opacity-60 text-right\">Besparing</div>\n          </div>\n          {enabledAppliances.map(appliance => (\n            <div key={appliance.id} className=\"border-b border-[#E5E5E5] last:border-0\">\n              <div className=\"w-full px-4 py-2 grid grid-cols-3 gap-3 items-center opacity-50\">\n                <div className=\"text-sm text-[#000000]\">{appliance.name}</div>\n                <div className=\"text-xs text-[#000000] opacity-60 text-center\">—</div>\n                <div className=\"text-sm text-[#000000] text-right\">—</div>\n              </div>\n            </div>\n          ))}\n          <div className=\"px-4 py-4 text-center\">\n            <div className=\"text-xs text-[#000000] opacity-60\">Priser för imorgon är inte tillgängliga än</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  let totalSavings = 0;\n  const savingsDataMap = new Map<number, SavingsData>();\n\n  const dailyAvgPrice = priceData.reduce((sum, slot) => sum + slot.price, 0) / priceData.length;\n\n  enabledAppliances.forEach((appliance) => {\n    const savingsData = applianceService.calculateSavings(appliance, dailyAvgPrice, priceData);\n    if (savingsData) {\n      totalSavings += savingsData.savingsKr;\n      savingsDataMap.set(appliance.id, savingsData);\n    }\n  });\n\n  const toggleDevice = (id: number) => {\n    setExpandedDevices(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(id)) {\n        newSet.delete(id);\n      } else {\n        newSet.add(id);\n      }\n      return newSet;\n    });\n  };\n\n  const getIconComponent = (iconName: string) => {\n    const IconComponent = (LucideIcons as any)[iconName];\n    return IconComponent ? IconComponent : LucideIcons.Zap;\n  };\n\n  const formatTime = (time: Date) => {\n    return time.toLocaleTimeString('sv-SE', { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const totalYearly = totalSavings * 365;\n  const dailySavings = totalSavings.toFixed(2);\n\n  return (\n    <div className=\"py-2 pb-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h2 className=\"text-lg font-normal\">Dina enheter</h2>\n          <button\n            onClick={onSettingsClick}\n            className=\"p-2 hover:bg-[#F2EFEC] rounded transition-colors\"\n          >\n            <Settings className=\"w-6 h-6 text-[#000000]\" />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded\">\n        <div className=\"px-4 py-3 grid grid-cols-3 gap-3 items-center border-b border-[#E5E5E5]\">\n          <div className=\"text-xs text-[#000000] opacity-60\">Enhet</div>\n          <div className=\"text-xs text-[#000000] opacity-60 text-center\">Optimal tid</div>\n          <div className=\"text-xs text-[#000000] opacity-60 text-right\">Besparing</div>\n        </div>\n\n        {enabledAppliances.map((appliance) => {\n          const savingsData = savingsDataMap.get(appliance.id);\n          const isExpanded = expandedDevices.has(appliance.id);\n          const Icon = getIconComponent(appliance.icon);\n\n          return (\n            <div key={appliance.id} className=\"border-b border-[#E5E5E5] last:border-0\">\n                <button\n                  onClick={() => toggleDevice(appliance.id)}\n                  className=\"w-full px-4 py-2 grid grid-cols-3 gap-3 items-center hover:bg-[#F2EFEC]/30 transition-colors text-left\"\n                >\n                  <div className=\"text-sm text-[#000000] truncate\">\n                    {appliance.name}\n                  </div>\n                  <div className=\"text-xs text-[#000000] opacity-60 text-center whitespace-nowrap\">\n                    {savingsData ? (\n                      <>\n                        {formatTime(savingsData.bestSlots[0].time)}–\n                        {formatTime(new Date(savingsData.bestSlots[savingsData.bestSlots.length - 1].time.getTime() + 15 * 60000))}\n                      </>\n                    ) : '—'}\n                  </div>\n                  <div className=\"flex items-center justify-end gap-2\">\n                    <div className=\"text-sm text-[#000000]\">\n                      {savingsData ? savingsData.savingsDisplay : '—'}\n                    </div>\n                    <ChevronDown className={`w-3 h-3 text-[#000000] opacity-40 shrink-0 transition-transform ${isExpanded ? 'rotate-180' : ''}`} />\n                  </div>\n                </button>\n\n                {isExpanded && savingsData && (\n                  <div className=\"px-4 pb-2 text-xs text-[#000000] space-y-1\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"opacity-60\">Förbrukning</span>\n                      <span>{appliance.kWh} kWh · {appliance.hours}h</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"opacity-60\">Snittpris</span>\n                      <span>{savingsData.bestAvg.toFixed(1)} öre/kWh</span>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n\n        {totalSavings > 0 && (\n          <div className=\"border-t border-[#E5E5E5] mt-2\">\n            <button\n              onClick={() => setExpandedSavings(!expandedSavings)}\n              className=\"w-full px-4 pt-3 pb-3 flex items-center justify-between hover:bg-[#F2EFEC]/30 transition-colors\"\n            >\n              <div className=\"text-sm text-[#000000]\">Årlig besparing</div>\n              <div className=\"flex items-center gap-2 shrink-0\">\n                <div className=\"text-sm text-[#009A33]\">{totalYearly.toFixed(0)} kr</div>\n                <ChevronDown className={`w-4 h-4 text-[#000000] opacity-40 transition-transform ${expandedSavings ? 'rotate-180' : ''}`} />\n              </div>\n            </button>\n\n            {expandedSavings && (\n              <div className=\"px-4 pb-3 text-xs text-[#000000] space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"opacity-60\">Daglig besparing</span>\n                  <span>{dailySavings} kr</span>\n                </div>\n                <div className=\"pt-1 border-t border-[#E5E5E5]\">\n                  <div className=\"opacity-60 mb-1\">Så räknas det ut:</div>\n                  <div className=\"space-y-0.5\">\n                    <div>Jämför snittpris för dagen med bästa tid för varje enhet</div>\n                    <div>Multiplicerar skillnaden med förbrukning (kWh)</div>\n                    <div>Summerar alla enheter = daglig besparing</div>\n                    <div className=\"pt-1\">{dailySavings} kr × 365 dagar = {totalYearly.toFixed(0)} kr/år</div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAEA;AALA;;;;;AAcO,SAAS,WAAW,EAAE,gBAAgB,EAAE,SAAS,EAAE,eAAe,EAAE,QAAQ,EAAmB;IACpG,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAc,IAAI;IACxE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IAEvD,MAAM,oBAAoB,iBAAiB,oBAAoB;IAE/D,IAAI,kBAAkB,MAAM,KAAK,GAAG;QAClC,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAsB;;;;;;0CACpC,8OAAC;gCACC,SAAS;gCACT,WAAU;0CAEV,cAAA,8OAAC,sNAAQ;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;8BAI1B,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAsB;;;;;;0CACpC,8OAAC;gCACC,SAAS;gCACT,WAAU;0CAEV,cAAA,8OAAC,sNAAQ;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;8BAI1B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;8CAAoC;;;;;;8CACnD,8OAAC;oCAAI,WAAU;8CAAgD;;;;;;8CAC/D,8OAAC;oCAAI,WAAU;8CAA+C;;;;;;;;;;;;wBAE/D,kBAAkB,GAAG,CAAC,CAAA,0BACrB,8OAAC;gCAAuB,WAAU;0CAChC,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDAA0B,UAAU,IAAI;;;;;;sDACvD,8OAAC;4CAAI,WAAU;sDAAgD;;;;;;sDAC/D,8OAAC;4CAAI,WAAU;sDAAoC;;;;;;;;;;;;+BAJ7C,UAAU,EAAE;;;;;sCAQxB,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CAAoC;;;;;;;;;;;;;;;;;;;;;;;IAK7D;IAEA,IAAI,eAAe;IACnB,MAAM,iBAAiB,IAAI;IAE3B,MAAM,gBAAgB,UAAU,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK,EAAE,KAAK,UAAU,MAAM;IAE7F,kBAAkB,OAAO,CAAC,CAAC;QACzB,MAAM,cAAc,iBAAiB,gBAAgB,CAAC,WAAW,eAAe;QAChF,IAAI,aAAa;YACf,gBAAgB,YAAY,SAAS;YACrC,eAAe,GAAG,CAAC,UAAU,EAAE,EAAE;QACnC;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,mBAAmB,CAAA;YACjB,MAAM,SAAS,IAAI,IAAI;YACvB,IAAI,OAAO,GAAG,CAAC,KAAK;gBAClB,OAAO,MAAM,CAAC;YAChB,OAAO;gBACL,OAAO,GAAG,CAAC;YACb;YACA,OAAO;QACT;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,gBAAgB,AAAC,iKAAmB,CAAC,SAAS;QACpD,OAAO,gBAAgB,gBAAgB,kKAAY,GAAG;IACxD;IAEA,MAAM,aAAa,CAAC;QAClB,OAAO,KAAK,kBAAkB,CAAC,SAAS;YAAE,MAAM;YAAW,QAAQ;QAAU;IAC/E;IAEA,MAAM,cAAc,eAAe;IACnC,MAAM,eAAe,aAAa,OAAO,CAAC;IAE1C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAsB;;;;;;sCACpC,8OAAC;4BACC,SAAS;4BACT,WAAU;sCAEV,cAAA,8OAAC,sNAAQ;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAK1B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAoC;;;;;;0CACnD,8OAAC;gCAAI,WAAU;0CAAgD;;;;;;0CAC/D,8OAAC;gCAAI,WAAU;0CAA+C;;;;;;;;;;;;oBAG/D,kBAAkB,GAAG,CAAC,CAAC;wBACtB,MAAM,cAAc,eAAe,GAAG,CAAC,UAAU,EAAE;wBACnD,MAAM,aAAa,gBAAgB,GAAG,CAAC,UAAU,EAAE;wBACnD,MAAM,OAAO,iBAAiB,UAAU,IAAI;wBAE5C,qBACE,8OAAC;4BAAuB,WAAU;;8CAC9B,8OAAC;oCACC,SAAS,IAAM,aAAa,UAAU,EAAE;oCACxC,WAAU;;sDAEV,8OAAC;4CAAI,WAAU;sDACZ,UAAU,IAAI;;;;;;sDAEjB,8OAAC;4CAAI,WAAU;sDACZ,4BACC;;oDACG,WAAW,YAAY,SAAS,CAAC,EAAE,CAAC,IAAI;oDAAE;oDAC1C,WAAW,IAAI,KAAK,YAAY,SAAS,CAAC,YAAY,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK;;+DAEnG;;;;;;sDAEN,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DACZ,cAAc,YAAY,cAAc,GAAG;;;;;;8DAE9C,8OAAC,mOAAW;oDAAC,WAAW,CAAC,gEAAgE,EAAE,aAAa,eAAe,IAAI;;;;;;;;;;;;;;;;;;gCAI9H,cAAc,6BACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAa;;;;;;8DAC7B,8OAAC;;wDAAM,UAAU,GAAG;wDAAC;wDAAQ,UAAU,KAAK;wDAAC;;;;;;;;;;;;;sDAE/C,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAa;;;;;;8DAC7B,8OAAC;;wDAAM,YAAY,OAAO,CAAC,OAAO,CAAC;wDAAG;;;;;;;;;;;;;;;;;;;;2BAhCtC,UAAU,EAAE;;;;;oBAsCxB;oBAED,eAAe,mBACd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,SAAS,IAAM,mBAAmB,CAAC;gCACnC,WAAU;;kDAEV,8OAAC;wCAAI,WAAU;kDAAyB;;;;;;kDACxC,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;oDAA0B,YAAY,OAAO,CAAC;oDAAG;;;;;;;0DAChE,8OAAC,mOAAW;gDAAC,WAAW,CAAC,uDAAuD,EAAE,kBAAkB,eAAe,IAAI;;;;;;;;;;;;;;;;;;4BAI1H,iCACC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DAAa;;;;;;0DAC7B,8OAAC;;oDAAM;oDAAa;;;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;0DAAkB;;;;;;0DACjC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;kEAAI;;;;;;kEACL,8OAAC;kEAAI;;;;;;kEACL,8OAAC;kEAAI;;;;;;kEACL,8OAAC;wDAAI,WAAU;;4DAAQ;4DAAa;4DAAmB,YAAY,OAAO,CAAC;4DAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUlG","debugId":null}},
    {"offset": {"line": 1534, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/prototypes/prototype-a/SettingsModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { X, Settings as SettingsIcon } from 'lucide-react';\nimport { ApplianceService, Appliance } from '@/lib/appliance-service';\nimport * as LucideIcons from 'lucide-react';\n\ninterface SettingsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  applianceService: ApplianceService;\n  onUpdate: () => void;\n}\n\nexport function SettingsModal({ isOpen, onClose, applianceService, onUpdate }: SettingsModalProps) {\n  const [expandedSettings, setExpandedSettings] = useState<Set<number>>(new Set());\n\n  if (!isOpen) return null;\n\n  const appliances = applianceService.getAppliances();\n\n  const toggleAppliance = (id: number) => {\n    applianceService.toggleAppliance(id);\n    onUpdate();\n  };\n\n  const toggleSettings = (id: number) => {\n    setExpandedSettings(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(id)) {\n        newSet.delete(id);\n      } else {\n        newSet.add(id);\n      }\n      return newSet;\n    });\n  };\n\n  const updateField = (id: number, field: keyof Appliance, value: any) => {\n    applianceService.updateApplianceField(id, field, value);\n    onUpdate();\n  };\n\n  const updateTimeWindow = (id: number, field: 'start' | 'end', value: number) => {\n    applianceService.updateTimeWindow(id, field, value);\n    onUpdate();\n  };\n\n  const getIconComponent = (iconName: string) => {\n    const IconComponent = (LucideIcons as any)[iconName];\n    return IconComponent ? IconComponent : LucideIcons.Zap;\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50\"\n      style={{ backgroundColor: 'rgba(0, 0, 0, 0.3)' }}\n      onClick={(e) => {\n        if (e.target === e.currentTarget) {\n          onClose();\n        }\n      }}\n    >\n      <div className=\"absolute bottom-0 left-0 right-0 bg-white rounded-t-3xl max-h-[90vh] overflow-y-auto p-6 shadow-2xl\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h2 className=\"text-lg font-normal\">Enheter</h2>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-[#F2EFEC] rounded-full transition-colors\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        <div className=\"space-y-3\">\n          {appliances.map((app) => {\n            const isExpanded = expandedSettings.has(app.id);\n            const Icon = getIconComponent(app.icon);\n\n            return (\n              <div key={app.id} className=\"bg-[#F2EFEC] rounded\">\n                <div className=\"flex items-center justify-between p-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <Icon className=\"w-6 h-6\" />\n                    <div className=\"text-sm\">{app.name}</div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => toggleSettings(app.id)}\n                      className=\"p-2 hover:bg-[#CDC8C2] rounded transition-colors\"\n                    >\n                      <SettingsIcon className=\"w-5 h-5 text-[#000000]\" />\n                    </button>\n                    <button\n                      onClick={() => toggleAppliance(app.id)}\n                      className={`relative inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors ${\n                        app.enabled ? 'bg-[#009A33]' : 'bg-[#CDC8C2]'\n                      }`}\n                      role=\"switch\"\n                      aria-checked={app.enabled}\n                    >\n                      <span\n                        className={`pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg transition-transform ${\n                          app.enabled ? 'translate-x-5' : 'translate-x-0'\n                        }`}\n                      />\n                    </button>\n                  </div>\n                </div>\n\n                {isExpanded && (\n                  <div className=\"px-4 pb-4 space-y-3 border-t border-[#CDC8C2] pt-3\">\n                    <div>\n                      <label className=\"text-xs text-[#000000] opacity-75 mb-1 block\">\n                        Förbrukning (kWh)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={app.kWh}\n                        onChange={(e) => updateField(app.id, 'kWh', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 bg-white rounded text-sm border border-[#CDC8C2]\"\n                        step=\"0.1\"\n                        min=\"0\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs text-[#000000] opacity-75 mb-1 block\">\n                        Tid (timmar)\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={app.hours}\n                        onChange={(e) => updateField(app.id, 'hours', parseFloat(e.target.value))}\n                        className=\"w-full px-3 py-2 bg-white rounded text-sm border border-[#CDC8C2]\"\n                        step=\"0.5\"\n                        min=\"0.5\"\n                      />\n                    </div>\n\n                    <div>\n                      <label className=\"text-xs text-[#000000] opacity-75 mb-1 block\">\n                        Tidsfönster\n                      </label>\n                      <div className=\"flex gap-2\">\n                        <input\n                          type=\"number\"\n                          value={app.timeWindow.start}\n                          onChange={(e) => updateTimeWindow(app.id, 'start', parseInt(e.target.value))}\n                          className=\"flex-1 px-3 py-2 bg-white rounded text-sm border border-[#CDC8C2]\"\n                          min=\"0\"\n                          max=\"23\"\n                          placeholder=\"Från\"\n                        />\n                        <span className=\"flex items-center text-sm\">–</span>\n                        <input\n                          type=\"number\"\n                          value={app.timeWindow.end}\n                          onChange={(e) => updateTimeWindow(app.id, 'end', parseInt(e.target.value))}\n                          className=\"flex-1 px-3 py-2 bg-white rounded text-sm border border-[#CDC8C2]\"\n                          min=\"0\"\n                          max=\"24\"\n                          placeholder=\"Till\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1858, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/shared/BottomNav.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { usePathname } from 'next/navigation';\nimport Link from 'next/link';\nimport { Home, BarChart3, Zap, User } from 'lucide-react';\n\ninterface NavItem {\n  label: string;\n  icon: React.ReactNode;\n  href: string;\n}\n\nexport function BottomNav({ prototypePrefix = '' }: { prototypePrefix?: string }) {\n  const pathname = usePathname();\n\n  const navItems: NavItem[] = [\n    {\n      label: 'Hem',\n      icon: <Home className=\"w-5 h-5\" />,\n      href: prototypePrefix || '/',\n    },\n    {\n      label: 'Insikter',\n      icon: <BarChart3 className=\"w-5 h-5\" />,\n      href: `${prototypePrefix}/insights`,\n    },\n    {\n      label: 'Enheter',\n      icon: <Zap className=\"w-5 h-5\" />,\n      href: `${prototypePrefix}/devices`,\n    },\n    {\n      label: 'Profil',\n      icon: <User className=\"w-5 h-5\" />,\n      href: `${prototypePrefix}/profile`,\n    },\n  ];\n\n  return (\n    <nav className=\"fixed bottom-0 left-0 right-0 bg-white\">\n      <div className=\"flex items-center justify-around px-4 py-2 max-w-md mx-auto\">\n        {navItems.map((item) => {\n          const isActive = pathname === item.href;\n          return (\n            <Link\n              key={item.label}\n              href={item.href}\n              className={`flex flex-col items-center gap-1 px-4 py-2 transition-colors ${\n                isActive ? 'text-foreground' : 'text-muted-foreground'\n              }`}\n            >\n              <div className={isActive ? 'text-foreground' : ''}>{item.icon}</div>\n              <span className=\"text-xs\">{item.label}</span>\n            </Link>\n          );\n        })}\n      </div>\n    </nav>\n  );\n}\n\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AALA;;;;;AAaO,SAAS,UAAU,EAAE,kBAAkB,EAAE,EAAgC;IAC9E,MAAM,WAAW,IAAA,iJAAW;IAE5B,MAAM,WAAsB;QAC1B;YACE,OAAO;YACP,oBAAM,8OAAC,2MAAI;gBAAC,WAAU;;;;;;YACtB,MAAM,mBAAmB;QAC3B;QACA;YACE,OAAO;YACP,oBAAM,8OAAC,+NAAS;gBAAC,WAAU;;;;;;YAC3B,MAAM,GAAG,gBAAgB,SAAS,CAAC;QACrC;QACA;YACE,OAAO;YACP,oBAAM,8OAAC,uMAAG;gBAAC,WAAU;;;;;;YACrB,MAAM,GAAG,gBAAgB,QAAQ,CAAC;QACpC;QACA;YACE,OAAO;YACP,oBAAM,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YACtB,MAAM,GAAG,gBAAgB,QAAQ,CAAC;QACpC;KACD;IAED,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAC;gBACb,MAAM,WAAW,aAAa,KAAK,IAAI;gBACvC,qBACE,8OAAC,uKAAI;oBAEH,MAAM,KAAK,IAAI;oBACf,WAAW,CAAC,6DAA6D,EACvE,WAAW,oBAAoB,yBAC/B;;sCAEF,8OAAC;4BAAI,WAAW,WAAW,oBAAoB;sCAAK,KAAK,IAAI;;;;;;sCAC7D,8OAAC;4BAAK,WAAU;sCAAW,KAAK,KAAK;;;;;;;mBAPhC,KAAK,KAAK;;;;;YAUrB;;;;;;;;;;;AAIR","debugId":null}},
    {"offset": {"line": 1970, "column": 0}, "map": {"version":3,"sources":["file:///Users/oskarglauser/Sites/elpris/components/prototypes/prototype-a/DetailView.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport Link from 'next/link';\nimport { ChevronLeft } from 'lucide-react';\nimport {\n  fetchTodayAndTomorrowPrices,\n  PriceInterval,\n  calculatePriceStats,\n  getCurrentPriceInterval\n} from '@/lib/electricity-api';\nimport { ApplianceService, PriceSlot } from '@/lib/appliance-service';\nimport { PriceChartGraph } from './PriceChartGraph';\nimport { DayToggle, DaySelection } from './DayToggle';\nimport { DeviceList } from './DeviceList';\nimport { SettingsModal } from './SettingsModal';\nimport { BottomNav } from '@/components/shared/BottomNav';\n\nexport function DetailView({ prototypeId }: { prototypeId: string }) {\n  const [prices, setPrices] = useState<PriceInterval[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedDay, setSelectedDay] = useState<DaySelection>('today');\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [updateTrigger, setUpdateTrigger] = useState(0);\n\n  const applianceService = useMemo(() => new ApplianceService(), []);\n\n  useEffect(() => {\n    async function loadPrices() {\n      try {\n        const { today, tomorrow } = await fetchTodayAndTomorrowPrices();\n        const allPrices = [...today, ...tomorrow];\n        setPrices(allPrices);\n        setError(null);\n      } catch (error) {\n        console.error('Failed to load prices:', error);\n        setError(error instanceof Error ? error.message : 'Failed to load electricity prices');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadPrices();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-muted-foreground\">Loading...</div>\n      </div>\n    );\n  }\n\n  if (error || prices.length === 0) {\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center gap-4 p-4\">\n        <div className=\"text-muted-foreground text-center\">\n          {error || 'No price data available'}\n        </div>\n        <button\n          onClick={() => window.location.reload()}\n          className=\"px-4 py-2 bg-primary text-primary-foreground rounded hover:bg-primary/90\"\n        >\n          Retry\n        </button>\n        <Link\n          href={`/prototype-${prototypeId}`}\n          className=\"text-primary hover:opacity-70\"\n        >\n          Back to overview\n        </Link>\n      </div>\n    );\n  }\n\n  const todayPrices = prices.filter(p => {\n    const date = new Date(p.time_start);\n    const now = new Date();\n    return date.getDate() === now.getDate() && date.getMonth() === now.getMonth();\n  });\n\n  const tomorrowPrices = prices.filter(p => {\n    const date = new Date(p.time_start);\n    const now = new Date();\n    const tomorrow = new Date(now);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return date.getDate() === tomorrow.getDate() && date.getMonth() === tomorrow.getMonth();\n  });\n\n  const filteredPrices = selectedDay === 'today' ? todayPrices : tomorrowPrices;\n  const priceSlots: PriceSlot[] = applianceService.convertPriceIntervalsToPriceSlots(filteredPrices);\n\n  const currentPrice = getCurrentPriceInterval(todayPrices);\n  const stats = calculatePriceStats(prices);\n\n  const handleUpdate = () => {\n    setUpdateTrigger(prev => prev + 1);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20\">\n      {/* iOS-style header */}\n      <div className=\"sticky top-0 z-50 bg-white\">\n        <div className=\"relative flex items-center justify-center px-4 py-3\">\n          <Link\n            href={`/prototype-${prototypeId}`}\n            className=\"absolute left-4 hover:opacity-70 transition-opacity\"\n          >\n            <ChevronLeft className=\"w-6 h-6\" />\n          </Link>\n          <h1 className=\"text-base font-semibold\">Elpris</h1>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"bg-white\">\n        {/* Price Chart */}\n        <PriceChartGraph priceData={filteredPrices} selectedDay={selectedDay} />\n\n        {/* Day Toggle */}\n        <DayToggle selectedDay={selectedDay} onDayChange={setSelectedDay} />\n      </div>\n\n      <div className=\"bg-background\">\n        {/* Device List */}\n        <DeviceList\n          applianceService={applianceService}\n          priceData={priceSlots}\n          onSettingsClick={() => setIsSettingsOpen(true)}\n          onUpdate={handleUpdate}\n          key={updateTrigger}\n        />\n      </div>\n\n      {/* Settings Modal */}\n      <SettingsModal\n        isOpen={isSettingsOpen}\n        onClose={() => setIsSettingsOpen(false)}\n        applianceService={applianceService}\n        onUpdate={handleUpdate}\n      />\n\n      <BottomNav prototypePrefix=\"/prototype-a\" />\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}